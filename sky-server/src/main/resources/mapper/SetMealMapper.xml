<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.SetMealMapper">
    <insert id="save">
        insert into setmeal(category_id, name, price, status, description, image, create_time, update_time, create_user, update_user)
        values (#{categoryId},#{name}, #{price}, #{status},#{description},#{image},#{createTime} ,#{updateTime} ,#{createUser} ,#{updateUser})
    </insert>

    <update id="UpdateSetMeal">
        update setmeal
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="image != null">image = #{image},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="pageQuery" resultType="com.sky.entity.Category">
        select * from category
        <where>
            <if test="name != null and name != ''">name like concat('%',#{name},'%'),</if>
            <if test="type != null">type = #{type}</if>
        </where>
    </select>

    <select id="SelectByType" resultType="Category">
        select * from category where status = 1
        <if test="type != null">and type = #{type}</if>
        order by sort asc,create_time desc
    </select>
    <select id="selectByPage" resultType="com.sky.vo.SetmealVO">
        select * from setmeal
        <where>
            <if test="name != null and name != ''">name like concat('%',#{name},'%')</if>
            <if test="status != null">status = #{status}</if>
            <if test="categoryId != null">category_id = #{categoryId}</if>
        </where>
    </select>

    <delete id="deleteByIds">
        delete from setmeal
        <where>
            id in
            <foreach collection="ids" item="id" separator="," close=")" open="(">
                #{id}
            </foreach>
        </where>
    </delete>
</mapper>
